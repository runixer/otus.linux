- name: Make dir for cert
  ansible.builtin.file:
    path: /etc/pki/otus
    state: directory
  tags: cert

- name: Generate an OpenSSL private key with the default values (4096 bits, RSA)
  community.crypto.openssl_privatekey:
    path: "/etc/pki/otus/{{ inventory_hostname }}.pem"
  tags: cert

- name: Generate an OpenSSL Certificate Signing Request with subjectAltName extension
  community.crypto.openssl_csr:
    path: "/etc/pki/otus/{{ inventory_hostname }}.csr"
    privatekey_path: "/etc/pki/otus/{{ inventory_hostname }}.pem"
    common_name: "{{ inventory_hostname }}"
    subject_alt_name: "{{ item.value | map('regex_replace', '^', 'DNS:') | list }}"
  with_dict:
    dns_server:
    - otus.internal
    - "{{ inventory_hostname }}"
    - "{{ external_ip }}"
    - "{{ ansible_host }}"
    - localhost
  tags: cert

- name: Generate an OpenSSL certificate signed with your own CA certificate
  community.crypto.x509_certificate:
    path: "/etc/pki/otus/{{ inventory_hostname }}.crt"
    csr_path: "/etc/pki/otus/{{ inventory_hostname }}.csr"
    provider: ownca
    ownca_content: "{{ ca }}"
    ownca_privatekey_content: "{{ cakey }}"
  tags: cert

- name: Install nginx
  ansible.builtin.dnf:
    name:
      - nginx
    state: present

- name: Set httpd_can_network_relay flag on and keep it persistent across reboots
  ansible.posix.seboolean:
    name: httpd_can_network_relay
    state: yes
    persistent: yes

- name: Configure nginx core
  ansible.builtin.copy:
    src: files/nginx.conf
    dest: /etc/nginx/nginx.conf
  notify: reload_nginx

- name: Configure nginx upstreams
  ansible.builtin.template:
    src: templates/upstreams.conf
    dest: /etc/nginx/conf.d/upstreams.conf
  notify: reload_nginx
  tags: nginx
